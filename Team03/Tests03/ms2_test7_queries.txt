1 - Selecting if statements
if ifs;
Select ifs
2, 15, 17, 27, 36, 40
5000
2 - Selecting while statements
while w;
Select w
9, 22, 26, 32, 37
5000
3 - Modifies on outermost if block case 1
variable v;
Select v such that Modifies(2, v)
a, c, d
5000
4 - Modifies on outermost if block case 2
variable v;
Select v such that Modifies(15, v)
y, x, w
5000
5 - Modifies on nested if block
variable v;
Select v such that Modifies(40, v)
x, w
5000
6 - Modifies on outermost while block case 1
variable v;
Select v such that Modifies(9, v)
y, z, x
5000
7 - Modifies on outermost while block case 2
variable v;
Select v such that Modifies(26, v)
b, x, d
5000
8 - Modifies on nested while block
variable v;
Select v such that Modifies(32, v)
d
5000
9 - Uses on outermost if block case 1
variable v;
Select v such that Uses(2, v)
a, b, c, d
5000
10 - Uses on outermost if block case 2
variable v;
Select v such that Uses(15, v)
y, x, a, z
5000
11 - Uses on nested if block case
variable v;
Select v such that Uses(17, v)
y, x
5000
12 - Uses on outermost while block case 1
variable v;
Select v such that Uses(9, v)
c, x, a, b, z
5000
13 - Uses on outermost while block case 2
variable v;
Select v such that Uses(26, v)
b, c, x, y, d, e
5000
14 - Uses on nested while block
variable v;
Select v such that Uses(22, v)
y, a, x, z
5000
15 - Follows, two stmtRefs, second follows first, no nesting
procedure p;
Select p such that Follows(34, 35)
proc
5000
16 - Follows, two stmtRefs, second follows first, both nested in same block
procedure p;
Select p such that Follows(28, 29)
proc
5000
17 - Follows, two stmtRefs, first stmt if, second stmt after the if block
procedure p;
Select p such that Follows(2, 8)
proc
5000
18 - Follows, two stmtRefs, first stmt while, second stmt after the while block
procedure p;
Select p such that Follows(26, 34)
proc
5000
19 - Follows, two stmtRefs, second stmt before first
procedure p;
Select p such that Follows(5, 4)
none
5000
20 - Follows, two stmtRefs, stmts of different nesting levels
procedure p;
Select p such that Follows(7, 8)
none
5000
21 - Follows, two stmtRefs, both args same stmt
procedure p;
Select p such that Follows(1, 1)
none
5000
22 - Follows, first arg synonym, second arg random statement
stmt s;
Select s such that Follows(s, 19)
18
5000
23 - Follows, first arg synonym, second arg is first line of program
stmt s;
Select s such that Follows(s, 1)
none
5000
24 - Follows, first arg synonym, second arg is nested statement
stmt s;
Select s such that Follows(s, 40)
39
5000
25 - Follows, first arg synonym, second arg is first line of a block
stmt s;
Select s such that Follows(s, 28)
none
5000
26 - Follows, first arg synonym, second args is line coming after a block
stmt s;
Select s such that Follows(s, 34)
26
5000
27 - Follows, first arg while synonym, second arg stmt after a while block
while w;
Select w such that Follows(w, 14)
9
5000
28 - Follows, first arg if synonym, second arg stmt after an if block
if ifs;
Select ifs such that Follows(ifs, 8)
2
5000
29 - Follows, second arg synonym, first arg random statement
stmt s;
Select s such that Follows(34, s)
35
5000
30 - Follows, second arg synonym, first arg is last line of program
stmt s;
Select s such that Follows(46, s)
none
5000
31 - Follows, second arg synonym, first arg is nested statement
stmt s;
Select s such that Follows(38, s)
39
5000
32 - Follows, second arg synonym, first arg is last line of a block
stmt s;
Select s such that Follows(42, s)
none
5000
33 - Follows, second arg synonym, first arg is line coming before a block
stmt s;
Select s such that Follows(8, s)
9
5000
34 - Follows, second arg while synonym, first arg is line before an IF block
while w;
Select w such that Follows(14, w)
none
5000
35 - Follows, second arg if synonym, first arg is line before a WHILE block
if ifs;
Select ifs such that Follows(25, ifs)
none
5000
36 - Follows, second arg if synonym, first arg is a if/while statement
stmt s;
Select s such that Follows(15, s)
25
5000
37 - Follows, both arg synonyms, first arg is a while synonym, select while statements
while w; stmt s;
Select w such that Follows(w, s)
9, 26, 37
5000
38 - Follows, both arg synonyms, first arg is an if synonym, select following statements
if ifs; stmt s;
Select s such that Follows(ifs, s)
8, 25, 32, 43, 46
5000
39 - Follows, both arg statement synonyms
stmt s, s1;
Select s such that Follows(s, s1)
1, 2, 3, 4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 18, 20, 23, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40
5000
40 - Follows*, both stmt refs, both stmt in outermost nesting level, second statement directly following first
procedure p;
Select p such that Follows*(8, 9)
proc
5000
41 - Follows*, both stmt refs, both stmt nested at same level, second statement directly following first
procedure p;
Select p such that Follows*(11, 12)
proc
5000
42 - Follows*, both stmt refs, both stmt in outermost nesting level, second statement transitively following first
procedure p;
Select p such that Follows*(1, 34)
proc
5000
43 - Follows*, both stmt refs, both stmt nested at same level, second statement transitively following first
procedure p;
Select p such that Follows*(10, 13)
proc
5000
44 - Follows*, both stmt refs, stmts in different nesting levels
procedure p;
Select p such that Follows*(9, 13)
none
5000
45 - Follows*, both stmt refs, same stmt
procedure p;
Select p such that Follows*(3, 3)
none
5000
46 - Follows*, both stmt refs, first stmt is while statement
procedure p;
Select p such that Follows*(9, 26)
proc
5000
47 - Follows*, first arg synonym, second arg is random statement case 1
read re;
Select re such that Follows*(re, 46)
1, 25
5000
48 - Follows* first arg synonym, second arg is random statement case 2
if ifs;
Select ifs such that Follows*(ifs, 46)
2, 15, 36
5000
49 - Follows*, first arg synonym, second arg is a nested statement
assign a;
Select a such that Follows*(a, 13)
11
5000
50 - Follows*, second arg synonym, first arg is a nested statement
stmt s;
Select s such that Follows*(38, s)
39, 40, 43
5000
51 - Follows*, second arg synonym, first arg is a random statement
stmt s;
Select s such that Follows*(14, s)
15, 25, 26, 34, 35, 36, 46
5000
52 - Follows*, second arg synonym, first arg is last line of program
stmt s;
Select s such that Follows*(46, s)
none
5000
53 - Parent, two stmt refs, same nesting level
procedure p;
Select p such that Parent(34, 35)
none
5000
54 - Parent, two stmt refs, first stmt is if statement, second stmt is inside the if block
procedure p;
Select p such that Parent(2, 4)
proc
5000
55 - Parent, two stmt refs, first stmt is if statement, second stmt is inside the else block
procedure p;
Select p such that Parent(15, 22)
proc
5000
56 - Parent, two stmt refs, first stmt is while statement, second stmt is inside the while block
procedure p;
Select p such that Parent(37, 39)
proc
5000
57 - Parent, two stmt refs, stmts different by more than one nesting level
procedure p;
Select p such that Parent(36, 42)
none
5000
58 - Parent, two stmt refs, first stmt is child, second stmt is parent
procedure p;
Select p such that Parent(33, 32)
none
5000
59 - Parent, first arg synonym, second stmt does not belong in a block
stmt s;
Select s such that Parent(s, 34)
none
5000
60 - Parent, first arg synonym, second stmt in an if block
stmt s;
Select s such that Parent(s, 44)
36
5000
61 - Parent, first arg synonym, second stmt in else clause of if block
if ifs;
Select ifs such that Parent(ifs, 42)
40
5000
62 - Parent, first arg synonym, second stmt in while block
while w;
Select w such that Parent(w, 43)
37
5000
63 - Parent, second arg synonym, first arg is not an if or while block
stmt s;
Select s such that Parent(8, s)
none
5000
64 - Parent, second arg synonym, first arg is a while block
assign a;
Select a such that Parent(9, a)
11, 13
5000
65 - Parent, second arg synonym, first arg is an if block
read re;
Select re such that Parent(40, re)
41, 42
5000
66 - Parent, both arg synonyms, nested if blocks
if if1, if2;
Select if1 such that Parent(if1, if2)
15
5000
67 - Parent, both arg synonyms, nested while blocks
while w1, w2;
Select w2 such that Parent(w1, w2)
32
5000
68 - Parent, both arg synonyms, while block nested in if block
if ifs; while w;
Select ifs such that Parent(ifs, w)
15, 36
5000
69 - Parent, both arg synonyms, if block nested in a while block
if ifs; while w;
Select ifs such that Parent(w, ifs)
27, 40
5000
70 - Parent, both arg synonyms, read statements in a if block
read re; if ifs;
Select re such that Parent(ifs, re)
4, 6, 16, 21, 29, 41, 42
5000
71 - Parent, two stmt refs, deep nesting
procedure p;
Select p such that Parent(36, 42)
none
5000
72 - Parent*, two stmt refs, deep nesting case 1
procedure p;
Select p such that Parent*(36, 42)
proc
5000
73 - Parent*, two stmt refs, deep nesting case 2
procedure p;
Select p such that Parent*(26, 33)
proc
5000
74 - Parent*, two stmt refs, first stmt not if/while stmt
procedure p;
Select p such that Parent*(25, 33)
none
5000
75 - Parent*, first arg synonym, second arg is a deeply nested statement
stmt s;
Select s such that Parent*(s, 41)
40, 37, 36
5000
76 - Parent*, first arg synonym, second arg is not nested in any block
stmt s;
Select s such that Parent*(s, 25)
none
5000
77 - Parent*, second arg synonym, first arg is not if/while stmt
stmt s;
Select s such that Parent*(14, s)
none
5000
78 - Parent*, second arg synonym, first arg is if stmt
stmt s;
Select s such that Parent*(15, s)
16, 17, 18, 19, 20, 21, 22, 23, 24
5000
79 - Parent*, second arg synonym, first arg is while stmt
assign a;
Select a such that Parent*(26, a)
30, 31, 33
5000
80 - Parent*, two synonyms, first synonym is not if/while stmt
assign a; print pr;
Select pr such that Parent*(a, pr)
none
5000
81 - Parent*, two synonyms, first synonym is while stmt
while w; read re;
Select w such that Parent*(w, re)
9, 26, 37
5000
82 - Parent*, two synonyms, first synonym is if stmt
if ifs; assign a;
Select a such that Parent*(ifs, a)
3, 18, 20, 24, 30, 31, 38, 45
5000